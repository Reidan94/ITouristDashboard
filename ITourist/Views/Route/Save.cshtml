@model IEnumerable<Place>
@{
    ViewBag.Title = Language.RouteSaved;
    Layout = "~/Views/Shared/_SideBarLayout.cshtml";
    bool optimizeWaypoints = ViewBag.OptimizeWaypoints ?? false;
    string name = ViewBag.Name;
}
@section Scripts
{
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&language=@Language.Culture.TwoLetterISOLanguageName"></script>
    @if (optimizeWaypoints)
    {
        <script>
            google.maps.event.addDomListener(window, 'load', initialize);
            var directionsService = new google.maps.DirectionsService();
            var coordinates, places;

            function initialize() {
                calcRoute();
            }

            function calcRoute() {
                coordinates = [@Html.Raw(String.Join(",", Model.Select(i => "'" + i.Coordinates + "'")))];
                places = [@Html.Raw(String.Join(",", Model.Select(i => "'" + i.Id + "'")))];
                console.log(places);
                var length = coordinates.length;
                var points = [];
                for (var i = 1; i < length - 1; i++) {
                    points.push({ location: coordinates[i] });
                }
                var start = coordinates[0];
                var end = coordinates[length - 1];
                var optimize = "@true" == "True" || "@true" == "true";
                var request = {
                    origin: start,
                    destination: end,
                    waypoints: points,
                    optimizeWaypoints: optimize,
                    travelMode: google.maps.TravelMode.WALKING
                };
                directionsService.route(request, function(response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        ReorderWaypoints(response.routes[0].waypoint_order);
                    }
                });
            }

            function ReorderWaypoints(order) {
                console.log(order);
                var arr = [];
                var i;
                var length = places.length;
                arr.push(places[0]);
                for (i = 1; i < length - 1; i++) {
                    arr.push(places[order[i - 1] + 1]);
                }
                arr.push(places[length - 1]);
                var res = arr.join(" ");
                console.log(res);
                $.getJSON('@Url.Action("Create", "Route")', { name: '@name', ids: res }, function(result) {
                    console.log(result);
                    $("#res").html(result["Message"]);
                });
            }
        </script>
    }
    else
    {
        <script>
            var places ='@(String.Join(" ", Model.Select(i => i.Id)))';
            $.getJSON('@Url.Action("Create", "Route")', { name: '@name', ids: places }, function (result) {
                console.log(result);
                $("#res").html(result["Message"]);
            });
        </script>
    }
}

<section>
    <div id="res" style="font-size: 150%;font-style: italic"></div>
    <br/>
    @Html.ActionLink(Language.GoToBookmarks,"Bookmarks","Route",null,new{@class="btn btn-large btn-blue"})
</section>